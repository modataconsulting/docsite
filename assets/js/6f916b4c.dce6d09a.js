"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,g=c["".concat(m,".").concat(k)]||c[k]||u[k]||l;return n?a.createElement(g,o(o({ref:t},s),{},{components:n})):a.createElement(g,o({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:4},o="Macros",i={unversionedId:"dbt-ga4/macros",id:"dbt-ga4/macros",title:"Macros",description:"These are the macros used to help with the GA4 data modeling.",source:"@site/docs/dbt-ga4/macros.md",sourceDirName:"dbt-ga4",slug:"/dbt-ga4/macros",permalink:"/docs/dbt-ga4/macros",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dbt-ga4/macros.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Models",permalink:"/docs/dbt-ga4/models"},next:{title:"Resources",permalink:"/docs/dbt-ga4/resources"}},m={},p=[{value:"get_first(<em>source</em>)",id:"get_firstsource",level:2},{value:"get_last(<em>source</em>)",id:"get_lastsource",level:2},{value:"extract_hostname_from_url(<em>source</em>)",id:"extract_hostname_from_urlsource",level:2},{value:"extract_query_string_from_url(<em>source</em>)",id:"extract_query_string_from_urlsource",level:2},{value:"remove_query_parameters(<em>source</em>)",id:"remove_query_parameterssource",level:2},{value:"unnest_by_key(<em>source</em>)",id:"unnest_by_keysource",level:2},{value:"unnest_by_key_alt(<em>source</em>)",id:"unnest_by_key_altsource",level:2},{value:"get_event_params(<em>source</em>)",id:"get_event_paramssource",level:2},{value:"default_channel_grouping(<em>source</em>)",id:"default_channel_groupingsource",level:2}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"macros"},"Macros"),(0,r.kt)("p",null,"These are the macros used to help with the GA4 data modeling."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"These macros are also not finalized & are likely to change.")))),(0,r.kt)("h2",{id:"get_firstsource"},"get_first(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/get_positions.sql"},"source")),")"),(0,r.kt)("p",null,"This macro returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"FIRST")," position of a specified ",(0,r.kt)("inlineCode",{parentName:"p"},"from_column_name"),", which is partioned by the ",(0,r.kt)("inlineCode",{parentName:"p"},"by_column_name"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"by_column_name")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The name of the column which you want to partition your selction by."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from_column_name")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The name of the column to get the first value of.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ get_first('<by_column_name>', '<from_column_name>') }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Get the landing_page of a corresponding Session by selecting the first ",(0,r.kt)("inlineCode",{parentName:"p"},"page_path")," using that Session's ",(0,r.kt)("inlineCode",{parentName:"p"},"session_key"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  {{ get_first('session_key', 'page_path') }} AS landing_page\n  ...\n")),(0,r.kt)("h2",{id:"get_lastsource"},"get_last(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/get_positions.sql"},"source")),")"),(0,r.kt)("p",null,"This macro returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"LAST")," position of a specified ",(0,r.kt)("inlineCode",{parentName:"p"},"from_column_name"),", which is partioned by the ",(0,r.kt)("inlineCode",{parentName:"p"},"by_column_name"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"by_column_name")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The name of the column which you want to partition your selction by."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from_column_name")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The name of the column to get the last value of.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ get_last('<by_column_name>', '<from_column_name>') }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Get the last ",(0,r.kt)("inlineCode",{parentName:"p"},"event_key")," for a corresponding Session using that Session's ",(0,r.kt)("inlineCode",{parentName:"p"},"session_key"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  {{ get_last('session_key', 'event_key') }} AS last_session_event_key,\n  ...\n")),(0,r.kt)("h2",{id:"extract_hostname_from_urlsource"},"extract_hostname_from_url(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/parse_url.sql"},"source")),")"),(0,r.kt)("p",null,"This macro extracts the ",(0,r.kt)("inlineCode",{parentName:"p"},"hostname")," from a column containing a ",(0,r.kt)("inlineCode",{parentName:"p"},"url"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The column containting URLs.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ extract_hostname_from_url('<url>') }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Extract the ",(0,r.kt)("inlineCode",{parentName:"p"},"hostname")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"page_location")," column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  {{ extract_hostname_from_url('page_location') }} AS page_hostname,\n  ...\n")),(0,r.kt)("h2",{id:"extract_query_string_from_urlsource"},"extract_query_string_from_url(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/parse_url.sql"},"source")),")"),(0,r.kt)("p",null,"This macro extracts the ",(0,r.kt)("inlineCode",{parentName:"p"},"query_string")," from a column containing a ",(0,r.kt)("inlineCode",{parentName:"p"},"url"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The column containting URLs.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ extract_query_string_from_url('<url>') }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Extract the ",(0,r.kt)("inlineCode",{parentName:"p"},"query_string")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"page_location")," column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  {{ extract_query_string_from_url('page_location') }} AS page_query_string,\n  ...\n")),(0,r.kt)("h2",{id:"remove_query_parameterssource"},"remove_query_parameters(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/parse_url.sql"},"source")),")"),(0,r.kt)("p",null,"This macro removes the specified ",(0,r.kt)("inlineCode",{parentName:"p"},"parameters")," from a column containing a ",(0,r.kt)("inlineCode",{parentName:"p"},"url"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The column containting URLs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parameters")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),", ",(0,r.kt)("em",{parentName:"li"},"default"),"=",(0,r.kt)("inlineCode",{parentName:"li"},"[]"),"): A list of query parameters to remove from the URL.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ remove_query_parameters('<url>', '[parameters]')  }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Remove the parameters: ",(0,r.kt)("inlineCode",{parentName:"p"},"gclid"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fbclid"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"_ga")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"page_location")," column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{% set parameters = ['gclid','fbclid','_ga'] %}\n\nSELECT\n  {{ remove_query_parameters('page_location', parameters) }} AS clean_page_location,\n  ...\n")),(0,r.kt)("h2",{id:"unnest_by_keysource"},"unnest_by_key(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/unnest_by_keys.sql"},"source")),")"),(0,r.kt)("p",null,"This macro unnests a single key's value from an array. This macro will dynamically alias the sub-query with the name of the ",(0,r.kt)("inlineCode",{parentName:"p"},"column_to_unnest"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"column_to_unnest")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The array column to unnest the key's value from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key_to_extract")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The key by which to get the corresponding value for."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value_type")," (",(0,r.kt)("em",{parentName:"li"},"optional"),", ",(0,r.kt)("em",{parentName:"li"},"default"),"=",(0,r.kt)("inlineCode",{parentName:"li"},'"string"'),"): The data type of the key's value column.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ unnest_by_key('<column_to_unnest>', '<key_to_extract>', '<value_type>') }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Unnest the corresponding values for the keys: ",(0,r.kt)("inlineCode",{parentName:"p"},"page_location")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ga_session_number")," from the nested ",(0,r.kt)("inlineCode",{parentName:"p"},"event_params")," column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  -- Unnest the default STRING value type\n  {{ unnest_by_key('event_params', 'page_location') }},\n  -- Unnest the INT value type\n  {{ unnest_by_key('event_params', 'ga_session_number',  'int') }},\n  ...\n")),(0,r.kt)("h2",{id:"unnest_by_key_altsource"},"unnest_by_key_alt(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/unnest_by_keys.sql"},"source")),")"),(0,r.kt)("p",null,"This macro unnests a single key's value from an array. This macro allows for a custom alias named sub-query."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"column_to_unnest")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The array column to unnest the key's value from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key_to_extract")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The key by which to get the corresponding value for."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value_type")," (",(0,r.kt)("em",{parentName:"li"},"optional"),", ",(0,r.kt)("em",{parentName:"li"},"default"),"=",(0,r.kt)("inlineCode",{parentName:"li"},'"string"'),"): The data type of the key's value column.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ unnest_by_key_alt('<column_to_unnest>', '<key_to_extract>', '<value_type>') }} AS <custom_alias_name>,\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Unnest the corresponding values for the keys: ",(0,r.kt)("inlineCode",{parentName:"p"},"page_location")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ga_session_number")," from the nested ",(0,r.kt)("inlineCode",{parentName:"p"},"event_params")," column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  -- Unnest the default STRING value type & use a custom alias\n  {{ unnest_by_key_alt('event_params', 'page_location') }} AS url, \n  -- Unnest the INT value type & use a custom alias\n  {{ unnest_by_key_alt('event_params', 'ga_session_number',  'int') }} AS session_number,\n  ...\n")),(0,r.kt)("h2",{id:"get_event_paramssource"},"get_event_params(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/unnest_by_keys.sql"},"source")),")"),(0,r.kt)("p",null,"This macro will dynamically return all of the ",(0,r.kt)("inlineCode",{parentName:"p"},"keys")," and their corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"value_types")," found in the ",(0,r.kt)("inlineCode",{parentName:"p"},"event_params")," array column."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This macro will exclude ",(0,r.kt)("inlineCode",{parentName:"p"},"event_params")," added to the ",(0,r.kt)("inlineCode",{parentName:"p"},"excluded_event_params")," variable, which is specified in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dbt_project.yml")," file.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage / Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  {% for event_param in get_event_params() -%}\n\n  {{ unnest_by_key('event_params', event_param['event_param_key'], event_param['event_param_value']) }}\n    \n  {{- \",\" if not loop.last }}\n  {% endfor %}\n  ...\n")),(0,r.kt)("h2",{id:"default_channel_groupingsource"},"default_channel_grouping(",(0,r.kt)("em",{parentName:"h2"},(0,r.kt)("a",{parentName:"em",href:"https://github.com/modataconsulting/dbt_ga4_project/blob/main/macros/default_channel_groupings.sql"},"source")),")"),(0,r.kt)("p",null,"This macro determines the ",(0,r.kt)("inlineCode",{parentName:"p"},"default_channel_grouping")," and will result in one the following classifications:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Direct")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Paid Social")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Oraginc Social")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Email")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Affiliates")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Paid Shopping")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Paid Search")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Display")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Other Advertising")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Organic Search")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Organic Video")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Organic Shopping")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Audio")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SMS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"(Other)"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Args:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The source column used in determining the default channel grouping."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"medium")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The medium column used in determining the default channel grouping."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source_category")," (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"required")),"): The source category column used in determining the default channel grouping. These are desiganted in the ",(0,r.kt)("inlineCode",{parentName:"li"},"ga4_source_categories.csv")," seed file.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"{{ default_channel_grouping('<source>', '<medium>', '<source_category>') }}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  {{ default_channel_grouping('source', 'medium', 'source_category') }} AS default_channel_grouping,\n  ...\n")))}u.isMDXComponent=!0}}]);